# Simple deployment with published Docker images
# REQUIRED: Create backend/app/config/backends.yaml from backends.example.yaml
services:
  db:
    image: postgres:17
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d app"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changethis}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-app}
    ports:
      - "5432:5432"

  backend:
    image: ghcr.io/miguelangel-nubla/product-matcher-backend:latest
    restart: always
    depends_on:
      db:
        condition: service_healthy
        restart: true
    volumes:
      - ./backend/app/config/backends.yaml:/code/app/config/backends.yaml:ro
    environment:
      - PROJECT_NAME=${PROJECT_NAME:-Product Matcher}
      - DOMAIN=${DOMAIN:-localhost}
      - FRONTEND_HOST=${FRONTEND_HOST:-http://localhost:3000}
      - ENVIRONMENT=${ENVIRONMENT:-local}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS:-http://localhost,http://localhost:3000,http://localhost:8000}
      - SECRET_KEY=${SECRET_KEY:-changethis}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER:-admin@example.com}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD:-changethis}
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL:-info@example.com}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-app}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changethis}
      - SENTRY_DSN=${SENTRY_DSN:-}
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/utils/health-check/"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    image: ghcr.io/miguelangel-nubla/product-matcher-frontend:latest
    restart: always
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8000}

  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    environment:
      - ADMINER_DESIGN=pepa-linha-dark
    ports:
      - "8080:8080"

volumes:
  app-db-data:
