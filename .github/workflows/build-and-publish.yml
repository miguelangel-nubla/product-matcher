name: Build and Publish Docker Images

on:
  push:
    branches:
      - master
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BACKEND: ${{ github.repository }}-backend
  IMAGE_NAME_FRONTEND: ${{ github.repository }}-frontend

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    permissions:
      contents: write
      issues: write
      pull-requests: write
    outputs:
      released: ${{ steps.release.outputs.new_release_published }}
      version: ${{ steps.release.outputs.new_release_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Semantic Release
        id: release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: false
          tags: product-matcher-backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: false
          tags: product-matcher-frontend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VITE_API_URL=http://localhost:8000
            NODE_ENV=production

      - name: Test images with simple docker compose
        run: |
          echo "Testing built images..."
          docker compose -f docker-compose.yml up -d --wait
          curl --fail --retry 5 --retry-delay 2 http://localhost:8000/api/v1/utils/health-check
          curl --fail --retry 5 --retry-delay 2 http://localhost:5173
          docker compose -f docker-compose.yml down -v --remove-orphans

  build-and-publish:
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.released == 'true'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and test backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: false
          tags: product-matcher-backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and test frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: false
          tags: product-matcher-frontend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VITE_API_URL=http://localhost:8000
            NODE_ENV=production

      - name: Test images with simple docker compose
        run: |
          echo "Testing built images..."
          docker compose -f docker-compose.yml up -d --wait
          curl --fail --retry 5 --retry-delay 2 http://localhost:8000/api/v1/utils/health-check
          curl --fail --retry 5 --retry-delay 2 http://localhost:5173
          docker compose -f docker-compose.yml down -v --remove-orphans

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:v${{ needs.release.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:latest
          cache-from: type=gha

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:v${{ needs.release.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:latest
          cache-from: type=gha
          build-args: |
            VITE_API_URL=http://localhost:8000
            NODE_ENV=production
